{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pappi\\\\OneDrive - National Institute of Technology Karnataka, Surathkal\\\\Desktop\\\\React_forms_project\\\\src\\\\components\\\\SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport useInput from \"./Hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const {\n    value: enteredName,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangedHandle,\n    inputBlurHandler: nameBlurHandler\n  } = useInput(value => value.trim() != '');\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [enteredEmailTouhed, setEnteredEmailTouched] = useState(false);\n  const enteredEmailIsValid = enteredEmail.includes('@');\n  const enteredEmailIsInValid = !enteredEmailIsValid && enteredEmailTouhed;\n  const nameInputIsInvalid = !enteredNameIsValidState && enteredNameTouched;\n  let formIaValid = false;\n  if (enteredNameIsValidState && enteredEmailIsInValid) {\n    formIaValid = true;\n  }\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n  const emailInputChangeHandler = event => {\n    setEnteredEmail(event.target.value);\n  };\n  const nameInputBlurHandler = event => {\n    setEnteredNameTouched(true);\n  };\n  const emailInputBlurHandler = event => {\n    setEnteredEmailTouched(true);\n  };\n  const formSubmitHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n    if (!enteredNameIsValidState) {\n      return;\n    }\n    setEnteredName('');\n    setEnteredNameTouched(false);\n    setEnteredEmail('');\n    setEnteredEmailTouched(false);\n  };\n  const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control';\n  const emailInputClasses = enteredEmailIsInValid ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        value: enteredName,\n        onBlur: nameInputBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"name must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your E-MAIL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: emailInputChangeHandler,\n        value: enteredEmail,\n        onBlur: emailInputBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), enteredEmailIsInValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Please enter a valid text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIaValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"BjQkEdHbCa+QzkgySA6S4bWtVwg=\", false, function () {\n  return [useInput];\n});\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","useInput","jsxDEV","_jsxDEV","SimpleInput","props","_s","value","enteredName","hasError","nameInputHasError","valueChangeHandler","nameChangedHandle","inputBlurHandler","nameBlurHandler","trim","enteredEmail","setEnteredEmail","enteredEmailTouhed","setEnteredEmailTouched","enteredEmailIsValid","includes","enteredEmailIsInValid","nameInputIsInvalid","enteredNameIsValidState","enteredNameTouched","formIaValid","nameInputChangeHandler","event","setEnteredName","target","emailInputChangeHandler","nameInputBlurHandler","setEnteredNameTouched","emailInputBlurHandler","formSubmitHandler","preventDefault","nameInputClasses","emailInputClasses","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","onBlur","disabled","_c","$RefreshReg$"],"sources":["C:/Users/pappi/OneDrive - National Institute of Technology Karnataka, Surathkal/Desktop/React_forms_project/src/components/SimpleInput.js"],"sourcesContent":["import {useState } from \"react\";\nimport useInput from \"./Hooks/use-input\";\n\n\n\nconst SimpleInput = (props) => {\n\n\nconst {\n  value: enteredName,\n  hasError: nameInputHasError,\n  valueChangeHandler: nameChangedHandle,\n  inputBlurHandler: nameBlurHandler} = useInput(value=> value.trim()!='' )\n\n\n\nconst[enteredEmail, setEnteredEmail] = useState('')\nconst[enteredEmailTouhed, setEnteredEmailTouched] = useState(false)\n\n\nconst enteredEmailIsValid = enteredEmail.includes('@');\nconst enteredEmailIsInValid = !enteredEmailIsValid && enteredEmailTouhed\n\nconst nameInputIsInvalid = !enteredNameIsValidState && enteredNameTouched\n\n\n\nlet formIaValid = false\n\n\nif(enteredNameIsValidState && enteredEmailIsInValid){\nformIaValid=true\n}\n\n  const nameInputChangeHandler = event=>{\n    setEnteredName(event.target.value)\n\n  }\n  const emailInputChangeHandler = event=>{\n   setEnteredEmail(event.target.value)\n\n  }\n\n\nconst nameInputBlurHandler = event =>{\nsetEnteredNameTouched(true)\n\n}\n\nconst emailInputBlurHandler = event =>{\n  setEnteredEmailTouched(true)\n\n  }\nconst formSubmitHandler = event=>{\n  event.preventDefault();\n  setEnteredNameTouched(true)\n\nif(!enteredNameIsValidState){\n  return\n}\n  setEnteredName('')\n  setEnteredNameTouched(false)\n\n  setEnteredEmail('')\n  setEnteredEmailTouched(false)\n}\n\n\nconst nameInputClasses = nameInputIsInvalid? 'form-control invalid': 'form-control'\nconst emailInputClasses = enteredEmailIsInValid? 'form-control invalid': 'form-control'\n  return (\n    <form onSubmit={formSubmitHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input  type='text' id='name' onChange={nameInputChangeHandler} value={enteredName} onBlur={nameInputBlurHandler} />\n        {nameInputIsInvalid && <p className=\"error-text\">name must not be empty</p>}\n\n      </div>\n      <div className={emailInputClasses}>\n        <label htmlFor='email'>Your E-MAIL</label>\n        <input  type='email' id='email' onChange={emailInputChangeHandler} value={enteredEmail} onBlur={emailInputBlurHandler} />\n        {enteredEmailIsInValid && <p className=\"error-text\">Please enter a valid text</p>}\n\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIaValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}