{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pappi\\\\OneDrive - National Institute of Technology Karnataka, Surathkal\\\\Desktop\\\\React_forms_project\\\\src\\\\components\\\\SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport useInput from \"./Hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const {\n    value: enteredName,\n    isValid: enteredNameIsValidState,\n    hasError: nameInputHasError,\n    reset: resetNamInput,\n    valueChangeHandler: nameChangedHandler,\n    inputBlurHandler: nameBlurHandler\n  } = useInput(value => value.trim() !== '');\n  const {\n    value: enteredEmail,\n    isValid: enteredEmailIsValidState,\n    hasError: emailInputHasError,\n    reset: resetEmailInput,\n    valueChangeHandler: emailChangedHandler,\n    inputBlurHandler: emailBlurHandler\n  } = useInput(value => value.includes('@'));\n  let formIaValid = false;\n  if (enteredNameIsValidState && enteredEmailIsValidState) {\n    formIaValid = true;\n  }\n  const formSubmitHandler = event => {\n    event.preventDefault();\n    if (!enteredNameIsValidState) {\n      return;\n    }\n    resetNamInput();\n    resetEmailInput();\n    setEnteredEmail('');\n    setEnteredEmailTouched(false);\n  };\n  const nameInputClasses = nameInputHasError ? 'form-control invalid' : 'form-control';\n  const emailInputClasses = emailInputHasError ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameChangedHandler,\n        value: enteredName,\n        onBlur: nameBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), nameInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"name must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your E-MAIL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: emailBlurHandler,\n        value: enteredEmail,\n        onBlur: emailInputBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), enteredEmailIsInValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Please enter a valid text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIaValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"bqYAlaI7Ftd0BYu2MNFkptV6mJg=\", false, function () {\n  return [useInput, useInput];\n});\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","useInput","jsxDEV","_jsxDEV","SimpleInput","props","_s","value","enteredName","isValid","enteredNameIsValidState","hasError","nameInputHasError","reset","resetNamInput","valueChangeHandler","nameChangedHandler","inputBlurHandler","nameBlurHandler","trim","enteredEmail","enteredEmailIsValidState","emailInputHasError","resetEmailInput","emailChangedHandler","emailBlurHandler","includes","formIaValid","formSubmitHandler","event","preventDefault","setEnteredEmail","setEnteredEmailTouched","nameInputClasses","emailInputClasses","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","onBlur","emailInputBlurHandler","enteredEmailIsInValid","disabled","_c","$RefreshReg$"],"sources":["C:/Users/pappi/OneDrive - National Institute of Technology Karnataka, Surathkal/Desktop/React_forms_project/src/components/SimpleInput.js"],"sourcesContent":["import {useState } from \"react\";\nimport useInput from \"./Hooks/use-input\";\n\n\n\nconst SimpleInput = (props) => {\n\n\nconst {\n  value: enteredName,\n  isValid: enteredNameIsValidState,\n  hasError: nameInputHasError,\n  reset: resetNamInput,\n  valueChangeHandler: nameChangedHandler,\n  inputBlurHandler: nameBlurHandler}\n  = useInput(value=> value.trim()!=='' )\n\nconst{\n  value: enteredEmail,\n  isValid: enteredEmailIsValidState,\n  hasError: emailInputHasError,\n  reset: resetEmailInput,\n  valueChangeHandler: emailChangedHandler,\n  inputBlurHandler: emailBlurHandler\n\n\n} = useInput(value=> value.includes('@'))\n\n\n\n\n\n\nlet formIaValid = false\n\n\nif(enteredNameIsValidState && enteredEmailIsValidState){\nformIaValid=true\n}\n\n\nconst formSubmitHandler = event=>{\n  event.preventDefault();\n\n\nif(!enteredNameIsValidState){\n  return\n}\n\nresetNamInput()\nresetEmailInput()\n\n  setEnteredEmail('')\n  setEnteredEmailTouched(false)\n}\n\n\nconst nameInputClasses = nameInputHasError? 'form-control invalid': 'form-control'\nconst emailInputClasses = emailInputHasError? 'form-control invalid': 'form-control'\n  return (\n    <form onSubmit={formSubmitHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input  type='text' id='name' onChange={nameChangedHandler} value={enteredName} onBlur={nameBlurHandler} />\n        {nameInputHasError && <p className=\"error-text\">name must not be empty</p>}\n\n      </div>\n      <div className={emailInputClasses}>\n        <label htmlFor='email'>Your E-MAIL</label>\n        <input  type='email' id='email' onChange={emailBlurHandler} value={enteredEmail} onBlur={emailInputBlurHandler} />\n        {enteredEmailIsInValid && <p className=\"error-text\">Please enter a valid text</p>}\n\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIaValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}